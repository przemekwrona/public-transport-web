on:
  workflow_call:
    inputs:
      artifact:
        type: string
      version:
        type: string

env:
  DOCKER_REGISTRY: registry.digitalocean.com/igeolab
  DOCKER_TAG: igeolab/${{ inputs.artifact }}:${{ inputs.version }}

jobs:
#  docker:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Download app jar
#        uses: actions/download-artifact@v4
#        with:
#          name: app-jar
#          path: ${{ inputs.artifact }}/target
#
#      - name: Install doctl
#        uses: digitalocean/action-doctl@v2
#        with:
#          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
#
#      - name: Build docker ${{ inputs.artifact }}:${{ inputs.version }}
#        run: cd ${{ inputs.artifact }} && docker build -t ${{ env.DOCKER_TAG }} .
#
#      - name: Tag Image
#        run: docker tag ${{ env.DOCKER_TAG }} ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_TAG }}
#
#      - name: Log in to DigitalOcean Container Registry with short-lived credentials
#        run: doctl registry login --expiry-seconds 1200
#
#      - name: Deploy docker image
#        run: docker push ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_TAG }}
#
#      - name: Clear registry
#        run: doctl registry garbage-collection start --include-untagged-manifests igeolab --force

  k8s:
    runs-on: ubuntu-latest
#    needs: [ docker ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Connect to Kubernetes
        run: doctl registry kubernetes-manifest iot-public-transport

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 iot-public-transport
#
#      - name: Connect to Kubernetes
#        run: doctl kubernetes cluster get iot-public-transport
#
#      - name: Check Kubernetes version
#        run: doctl kubernetes version

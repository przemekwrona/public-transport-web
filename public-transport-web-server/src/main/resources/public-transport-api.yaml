openapi: 3.0.0
info:
  title: Open Tip Planner API
  description: Open Tip Planner API
  version: 1.0.0
paths:
  /users:
    post:
      tags:
        - auth
      summary: Create new user in system
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppUserRequest'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppUserResponse'

  /auth/login:
    post:
      tags:
        - auth
      summary: Login to platform with credentials
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginAppUserRequest'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginAppUserResponse'

  /agency:
    get:
      tags:
        - agency
      summary: Return agency details
      operationId: getAgency
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgencyDetails'

    put:
      tags:
        - agency
      summary: Update agency details
      operationId: updateAgency
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgencyDetails'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'

  /otp/routers/{instance_id}/plan/summary:
    get:
      tags:
        - summary
      summary: Return possible routes generated by OTP engine
      operationId: summaryTrip
      parameters:
        - name: instance_id
          in: path
          required: true
          schema:
            type: string
          description: Id of OTP router
        - name: fromPlace
          in: query
          required: true
          schema:
            type: string
        - name: toPlace
          in: query
          required: true
          schema:
            type: string
        - name: date
          in: query
          required: true
          schema:
            type: string
        - name: time
          in: query
          required: true
          schema:
            type: string
        - name: mode
          in: query
          required: true
          schema:
            type: string
        - name: maxWalkDistance
          in: query
          required: false
          schema:
            type: number
            format: double
        - name: arriveBy
          in: query
          required: false
          schema:
            type: boolean
        - name: wheelchair
          in: query
          required: false
          schema:
            type: boolean
        - name: local
          in: query
          required: true
          schema:
            type: string
        - name: numItineraries
          in: query
          required: false
          schema:
            type: integer
        - name: showIntermediateStops
          in: query
          required: true
          schema:
            type: boolean
            default: true
        - name: realtime
          in: query
          required: false
          schema:
            type: boolean
        - name: optimize
          in: query
          required: false
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JourneySummaryResponse'

  /stops:
    get:
      tags:
        - stops
      summary: Return stops in indicated area
      operationId: getStopsInArea
      parameters:
        - name: maxLat
          in: query
          required: true
          schema:
            type: number
            format: float
        - name: minLon
          in: query
          required: true
          schema:
            type: number
            format: float
        - name: minLat
          in: query
          required: true
          schema:
            type: number
            format: float
        - name: maxLon
          in: query
          required: true
          schema:
            type: number
            format: float
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopsResponse'

components:
  schemas:
    CreateAppUserRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string

    CreateAppUserResponse:
      type: object
      properties:
        username:
          type: string

    LoginAppUserRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string

    LoginAppUserResponse:
      type: object
      properties:
        token:
          type: string

    AgencyDetails:
      type: object
      properties:
        agencyName:
          type: string
        agencyUrl:
          type: string
        agencyTimetableUrl:
          type: string

    ModeSummary:
      type: object
      properties:
        totalDistance:
          type: integer
        totalDuration:
          type: integer
        walkDistanceFromStation:
          type: integer
        walkDurationFromStation:
          type: integer
        walkDistanceToStation:
          type: integer
        walkDurationToStation:
          type: integer
        transfers:
          type: integer
        transfersWaitingAtStop:
          type: integer
        transferWalkDistance:
          type: integer
        transferWalkDuration:
          type: integer
        travelModeDistance:
          type: integer
        travelModeDuration:
          type: integer
        totalWalkDistance:
          type: integer
        totalWalkDuration:
          type: integer

    Difference:
      type: object
      properties:
        time:
          type: integer
        percentage:
          type: integer
        ratio:
          type: number
          format: float

    ModeDifference:
      type: object
      properties:
        walk:
          $ref: '#/components/schemas/Difference'
        bike:
          $ref: '#/components/schemas/Difference'
        transit:
          $ref: '#/components/schemas/Difference'
        car:
          $ref: '#/components/schemas/Difference'

    CityBikeStatistic:
      type: object
      properties:
        numBikesAvailable:
          type: integer
        numDocksAvailable:
          type: integer
        numDocks:
          type: integer
        occupancyRatio:
          type: number
          format: float

    CityBike:
      type: object
      properties:
        nearest_name:
          type: string
        nearest_distance:
          type: integer
        nearest:
          $ref: '#/components/schemas/CityBikeStatistic'
        _100_m:
          $ref: '#/components/schemas/CityBikeStatistic'
        _250_m:
          $ref: '#/components/schemas/CityBikeStatistic'
        _500_m:
          $ref: '#/components/schemas/CityBikeStatistic'

    Weather:
      type: object
      properties:
        tempC:
          type: number
          format: float
        humidity:
          type: integer
        cloud:
          type: integer

    JourneySummaryResponse:
      type: object
      properties:
        walk:
          $ref: '#/components/schemas/ModeSummary'
        bike:
          $ref: '#/components/schemas/ModeSummary'
        transit:
          $ref: '#/components/schemas/ModeSummary'
        car:
          $ref: '#/components/schemas/ModeSummary'

        differences:
          type: object
          properties:
            walk:
              $ref: '#/components/schemas/ModeDifference'
            bike:
              $ref: '#/components/schemas/ModeDifference'
            transit:
              $ref: '#/components/schemas/ModeDifference'
            car:
              $ref: '#/components/schemas/ModeDifference'
        city_bike:
          $ref: '#/components/schemas/CityBike'
        weather:
          $ref: '#/components/schemas/Weather'

    Stop:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        lon:
          type: number
          format: float
        lat:
          type: number
          format: float

    StopsResponse:
      type: object
      properties:
        stops:
          type: array
          items:
            $ref: '#/components/schemas/Stop'

    Status:
      type: object
      properties:
        status:
          type: string

